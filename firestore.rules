rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId);
    }
    
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        // Allow post owner to update any field
        isOwner(resource.data.authorId) ||
        // Allow any authenticated user to update likes array
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']) ||
        // Allow any authenticated user to update comments array
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['comments'])
      );
      allow delete: if isAuthenticated() && isOwner(resource.data.authorId);
    }

    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && isOwner(resource.data.userId);
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && isOwner(resource.data.userId);
      allow delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
  }
} 